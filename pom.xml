<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sber.stepanyan</groupId>
    <artifactId>compclub</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>compclub</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
        <registry.url>registry.sigma.sbrf.ru</registry.url>
        <base.image>${registry.url}/base/redhat/redhat-openjdk-18/openjdk18-openshift@sha256:06bbbf9272d5c5161f444388593e9bd8db793d8a2d95a50b429b3c0301fafcdd</base.image>
        <deploy.path>${registry.url}/pprb-dev/ci02705305/ci02729426_pprb_payments_dev/</deploy.path>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>2.5.0</version>
        </dependency>


        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>


            <!-- JIB config-->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.8.0</version>

                        <configuration>
                            <allowInsecureRegistries>true</allowInsecureRegistries>

                            <from>
                                <!-- ссылка на образ с которого формируем собственный -->
                                <image>${base.image}</image>
<!--                                <auth>-->
<!--                                    &lt;!&ndash; логин и пароль не меняются &ndash;&gt;-->
<!--                                    <username>nexus.user</username>-->
<!--                                    <password>nexus.password</password>-->
<!--                                </auth>-->
                            </from>
                            <!-- Формирование контейнера, где можно выбрать способ с mainСlass
                            - основной класс приложения или папки/файла appRoot -->
                            <container>
                                <format>Docker</format>
                                <!-- <ports>8080</ports> -->
                                <mainClass>com.sber.stepanyan.compclub.CompclubApplication</mainClass>
<!--                                                                 <appRoot>/target/${project.artifactId}-${project.version}.jar</appRoot>-->
                                <ports>8080</ports>

<!--                                <jvmFlags>-->
<!--                                    -Dspring.config.location=file:/deployments/config/application.yml,file:/deployments/config/ssl/ssl.yml,file:/deployments/config/secret/esb-config.yml,file:/deployments/config/secret/ups-config.yml-->
<!--                                </jvmFlags>-->
                            </container>
                            <to>
                                <!-- репозиторий куда деплоить контейнер и именем проекта -->
                                <image>${deploy.path}${project.artifactId}</image>
<!--                                <auth>-->
<!--                                    &lt;!&ndash; логин и пароль не меняются &ndash;&gt;-->
<!--                                    <username>nexus.user</username>-->
<!--                                    <password>nexus.password</password>-->
<!--                                </auth>-->
                                <!-- не изменяется, проставляет версию и тэг для образа -->
                                <tags>
                                    <tag>v1</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </to>
                        </configuration>

            </plugin>


        </plugins>
    </build>

</project>
